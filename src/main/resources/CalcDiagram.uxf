<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1392</x>
      <y>712</y>
      <w>232</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>_cs2800::Stack_
bg=pink
This class represents a 
Stack of Entry values
--
*Attributes*
-size: integer
-entries: List&lt;Entry&gt;
--
*Responsibilities*
+push(i: Entry)
/    Adds a new Entry to the Stack/
+pop(): Entry {exception=EmptyStack}
/    Returns (and removes) newest Entry/
+top(): Entry {exception=EmptyStack}
/    Return (but keeps) newset Entry/
+checkSize():integer
/    How many Entry's in the Stack/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1368</x>
      <y>528</y>
      <w>320</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt; 
bg=yellow
_cs2800::Calculator_
Allows calculation of 
String Expressions
--
*Responsibilities*
+evaluate(String: what): float
     {exception=InvalidExpression}
+checkType(evaluate: String): int
/    Check a given character to see if its/
/    a number, an operator or if its invalid/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1776</x>
      <y>1056</y>
      <w>168</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt; 
bg=orange
_cs2800::Type_
A list of the types of 
value an Entry can represent
--
_NUMBER_
_SYMBOL_
_STRING_
_INVALID_
--
*Responsibilities:*
+ toString(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1392</x>
      <y>984</y>
      <w>232</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>_cs2800::Entry_
bg=orange
Values stored in a Stack
--
*Attributes*
-number: float
-other: Symbol
-str: String
-type: Type
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; +Entry(float value)
&lt;&lt;constructor&gt;&gt; +Entry(Symbol which)
+getType(): Type
+getString(): String 
+getSymbol(): Symbol 
              {exception=BadType}
+getValue(): float
              {exception=BadType}
+equals(secondEntry: Entry): boolean 
/    Compares two entries/
+hashCode(): int 
/    Hashcode of the given object/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1056</x>
      <y>1024</y>
      <w>216</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt; 
bg=orange
_cs2800::Symbol_
A list of the non-number tokens 
possible in an expression
--
_LEFT BRACKET_
_RIGHT BRACKET_
_TIMES_
_DIVIDE_
_PLUS_
_MINUS_
_INVALID_
--
*Responsibilities:*
+ toString(): String
+ convertString(value: String): Symbol
/    Converts a given string to a Symbol/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1344</x>
      <y>32</y>
      <w>304</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>&lt;&lt;model&gt;&gt;
&lt;&lt;Singleton&gt;&gt;
bg=red
_cs2800: CalcModel_
Also shows the values of each of
the Calculator's memories.
--
*Attributes*
-prefix: RevPolishCalc
-infix: StandardCalculator
-previousAnswers: float
-instance: CalcModel
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; +CalcModel()
+evaluate(expr: String, infix:boolean): float
     {exception=InvalidExpression}s
+getInstance() : CalcModel
+getPreviousResult() : float
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>584</y>
      <w>264</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>bg=pink
_cs2800::NumStack_
Since reverse Polish evaluation
only uses a Stack of numeric values
we provide a facade to hide details
--
*Attributes*
-numStack: Stack
--
*Responsibilities*
+push(i: float)
+pop(): float 
      {exception=EmptyStack, BadTypeException}
+isEmpty():boolean

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1736</x>
      <y>592</y>
      <w>256</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>bg=pink
_cs2800::OpStack_
Since the Shunting algorithm
only uses a Stack of symbols 
we provide a facade to hide details
--
*Attributes*
-numStack: Stack
--
*Responsibilities*
+push(i: Symbol)
+pop(): Symbol 
      {exception=EmptyStack, BadTypeException}
+isEmpty():boolean

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1712</x>
      <y>304</y>
      <w>320</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>bg=yellow
_cs2800::StandardCalc_
Evaluates infix String Expressions
--
*Attributes*
-values: OpStack
-rpCalc: RevPolishCalc
--
*Responsibilities*
+evaluate(String: what): float
     {exception=InvalidExpression}
+convertPolish(infix: String): String
/    Converts a standt calulation to reverse polish/
+checkType(evaluate: String): int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1024</x>
      <y>320</y>
      <w>312</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>bg=yellow
_cs2800::RevPolishCalc_
Evaluates Reverse Polish
String Expressions
--
*Attributes*
-values: NumStack
--
*Responsibilities*
+evaluate(expression: String): float
     {exception=InvalidExpression}
+checkType(evaluate: String): int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1112</x>
      <y>256</y>
      <w>344</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>410.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>256</y>
      <w>328</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;390.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1832</x>
      <y>472</y>
      <w>24</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1616</x>
      <y>744</y>
      <w>240</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
&lt;&lt;facade&gt;&gt;</panel_attributes>
    <additional_attributes>280.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1144</x>
      <y>736</y>
      <w>264</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1pos=-50,20
m1=&lt;&lt;facade&gt;&gt;</panel_attributes>
    <additional_attributes>40.0;10.0;310.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1504</x>
      <y>472</y>
      <w>264</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;70.0;310.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1176</x>
      <y>464</y>
      <w>288</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>340.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1616</x>
      <y>976</y>
      <w>264</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;310.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1144</x>
      <y>976</y>
      <w>264</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>904</x>
      <y>136</y>
      <w>456</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>550.0;10.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>296</x>
      <y>592</y>
      <w>360</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;200.0;110.0;120.0;430.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>96</x>
      <y>560</y>
      <w>496</w>
      <h>384</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
m2=&lt;&lt;Observer&gt;&gt; </panel_attributes>
    <additional_attributes>10.0;460.0;10.0;150.0;600.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>576</x>
      <y>280</y>
      <w>336</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>&lt;&lt;controller&gt;&gt;
bg=blue
_cs2800:CalcController_
Create view and model.
Adds itself as an observer to the view
so that (asynchronous) changes
can be observed. 
--
*Attributes*
-model: CalcModel
-newView: ViewInterface
-isInfix: boolean
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; +CalcController(v: ViewInterface)
&lt;&lt;constructor&gt;&gt; +CalcController()
+changeType(t: OpType)
+addView(v: ViewInterface)
+calculate()
      {exception=InvalidExpression}
      
  Is notified when a calculation is required

+expressionType()
   Is notified when a change of expression type is indicated

group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1088</x>
      <y>464</y>
      <w>24</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>968</x>
      <y>16</y>
      <w>1072</w>
      <h>1280</h>
    </coordinates>
    <panel_attributes>                                                              
                                                              
                                                              
                                                                                                       Model Assembly
layer=0
fontsize=28
fg=magenta
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>544</x>
      <y>264</y>
      <w>400</w>
      <h>408</h>
    </coordinates>
    <panel_attributes>valign=bottom
Controller
layer=0
fontsize=28
fg=magenta
bg=light_gray
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>704</y>
      <w>840</w>
      <h>616</h>
    </coordinates>
    <panel_attributes>valign=bottom
View Assembly
fontsize=28
fg=magenta
bg=light_gray
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>168</x>
      <y>752</y>
      <w>272</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
_cs2800::ViewInterface_
--
Responsibilities
--
+getExpression(): String
+setAnswer(str: String): void
+addCalcObserver(f:Runnable): void
+addTypeObserver(l:Consumer&lt;OpType&gt;):void
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>96</x>
      <y>928</y>
      <w>320</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>&lt;&lt;view&gt;&gt;
_cs2800::AsciiView_
A menu based View
--
-expression: String
-thread: Runnable
-currentType: Consumer&lt;OpType&gt;
-answer: String
-prevAnswer: String
--
*Responsibilities:*
+menu()
+whichCommand(command: String, sc: Scanner): boolean
+toCalculate(sc: Scanner)
+helpScreen()
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>768</x>
      <y>592</y>
      <w>104</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
m2=&lt;&lt;Observer&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;480.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>168</x>
      <y>856</y>
      <w>96</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>344</x>
      <y>856</y>
      <w>344</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;410.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1496</x>
      <y>928</y>
      <w>48</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
0.. *</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>360</x>
      <y>1168</y>
      <w>224</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
_cs2800::OpType_
A list of the types an expression can be
--
_REVPOLISH_
_STANDARD_
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>656</x>
      <y>976</y>
      <w>240</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>&lt;&lt;view&gt;&gt;
&lt;&lt;Singleton&gt;&gt;
_cs2800::MainView_
A graphical window with 
1. a text field for an expression
2. a "calculate" button
3. a radio button: 
   "Reverse Polish/Infix"
--
-expression: String
-answer: String
--
*Responsibilities:*
+menu()
+start(primaryStage: Stage) 
     {exception=IOException }
+getInstance(): MainView
+initialize()
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>168</x>
      <y>336</y>
      <w>240</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>&lt;&lt;launcher&gt;&gt;
_cs2800::Launcher_
A graphical window with 

--
-expression: String
-answer: String
--
*Responsibilities:*
+start(primaryStage: Stage)
+startJavaFX(c: CalcController, args String[] ) 
+main(args: String[])
bg=magenta</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>408</x>
      <y>984</y>
      <w>48</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>528</x>
      <y>1032</y>
      <w>144</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>64</x>
      <y>48</y>
      <w>240</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Driver&gt;&gt;
_cs2800::Driver_
The launcher of the calculator
Launches a given view depending on how it
was launched

--
*Responsibilities:*
+main(args: String[])
/    Launches AsciiView if run through terminal/
/    or GUI if launched normally/
bg=magenta</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>488</x>
      <y>592</y>
      <w>216</w>
      <h>592</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>250.0;10.0;10.0;720.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>32</x>
      <y>24</y>
      <w>408</w>
      <h>616</h>
    </coordinates>
    <panel_attributes>valign=bottom
Main
fontsize=28
fg=magenta
bg=light_gray
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>272</x>
      <y>504</y>
      <w>512</w>
      <h>488</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
&lt;&lt;Composition relationship&gt;&gt;</panel_attributes>
    <additional_attributes>620.0;590.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>160</x>
      <y>216</y>
      <w>216</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
&lt;&lt;Composition relationship&gt;&gt;</panel_attributes>
    <additional_attributes>140.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>296</x>
      <y>120</y>
      <w>464</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
&lt;&lt;Composition relationship&gt;&gt;</panel_attributes>
    <additional_attributes>560.0;200.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>48</x>
      <y>120</y>
      <w>168</w>
      <h>816</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
&lt;&lt;Composition relationship&gt;&gt;</panel_attributes>
    <additional_attributes>100.0;1000.0;10.0;910.0;20.0;10.0</additional_attributes>
  </element>
</diagram>
